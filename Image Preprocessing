# Import image processing libraries
from torchvision import transforms
from PIL import Image

# Define the image preprocessing steps
preprocess = transforms.Compose([
    transforms.Resize(256),          # Resize the image to 256x256
    transforms.CenterCrop(224),      # Crop the center of the image to 224x224
    transforms.ToTensor(),           # Convert the image to a Tensor
    transforms.Normalize(            # Normalize the image
        mean=[0.485, 0.456, 0.406],  # Mean values for normalization
        std=[0.229, 0.224, 0.225]    # Std values for normalization
    ),
])

# Load and preprocess the image
image_path = 'sample_image.jpg'  # Path to the image
image = Image.open(image_path).convert('RGB')  # Open the image and convert to RGB
input_tensor = preprocess(image)  # Apply preprocessing to the image
input_batch = input_tensor.unsqueeze(0)  # Add batch dimension (since VGG16 expects a batch)
